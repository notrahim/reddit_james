{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\src\\\\components\\\\CreatePostForm\\\\Component.js\";\nimport React from 'react';\nimport { Field } from 'redux-form';\nimport categories from '../../categories';\nimport Form from '../shared/form/Form';\nimport renderField from '../shared/form/renderField';\nimport SubmitButton from '../shared/form/SubmitButton';\nvar postTypes = [{\n  label: 'link',\n  value: 'link'\n}, {\n  label: 'text',\n  value: 'text'\n}];\n\nvar CreatePostForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePostForm, _React$Component);\n\n  function CreatePostForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePostForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePostForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (post) {\n      return _this.props.attemptCreatePost(post);\n    };\n\n    _this.mapCategories = function () {\n      return categories.map(function (category, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, category);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePostForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this$props = this.props,\n          token = _this$props.token,\n          post = _this$props.post,\n          history = _this$props.history;\n      if (!token) history.push('/');\n      if (post) history.push(\"/a/\".concat(post.category, \"/\").concat(post.id));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        loading: this.props.isFetching,\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        wide: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"type\",\n        label: \"type\",\n        type: \"radiogroup\",\n        component: renderField,\n        options: postTypes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"category\",\n        label: \"category\",\n        type: \"select\",\n        component: renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.mapCategories()), React.createElement(Field, {\n        name: \"title\",\n        label: \"title\",\n        type: \"text\",\n        component: renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), this.props.form.values.type === 'link' && React.createElement(Field, {\n        name: \"url\",\n        label: \"url\",\n        type: \"url\",\n        component: renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), this.props.form.values.type === 'text' && React.createElement(Field, {\n        name: \"text\",\n        label: \"text\",\n        type: \"textarea\",\n        component: renderField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(SubmitButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"create post\"));\n    }\n  }]);\n\n  return CreatePostForm;\n}(React.Component);\n\nexport default CreatePostForm;","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\components\\CreatePostForm\\Component.js"],"names":["React","Field","categories","Form","renderField","SubmitButton","postTypes","label","value","CreatePostForm","onSubmit","post","props","attemptCreatePost","mapCategories","map","category","index","prevProps","prevState","snapshot","token","history","push","id","isFetching","handleSubmit","form","values","type","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field } from 'redux-form';\nimport categories from '../../categories';\nimport Form from '../shared/form/Form';\nimport renderField from '../shared/form/renderField';\nimport SubmitButton from '../shared/form/SubmitButton';\n\nconst postTypes = [\n  {\n    label: 'link',\n    value: 'link'\n  },\n  {\n    label: 'text',\n    value: 'text'\n  }\n];\n\nclass CreatePostForm extends React.Component {\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { token, post, history } = this.props;\n    if (!token) history.push('/');\n    if (post) history.push(`/a/${post.category}/${post.id}`);\n  }\n\n  onSubmit = post => this.props.attemptCreatePost(post);\n\n  mapCategories = () =>\n    categories.map((category, index) => (\n      <option key={index} value={category}>\n        {category}\n      </option>\n    ));\n\n  render() {\n    return (\n      <Form\n        loading={this.props.isFetching}\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        wide\n      >\n        <Field\n          name='type'\n          label='type'\n          type='radiogroup'\n          component={renderField}\n          options={postTypes}\n        />\n        <Field\n          name='category'\n          label='category'\n          type='select'\n          component={renderField}\n        >\n          {this.mapCategories()}\n        </Field>\n        <Field name='title' label='title' type='text' component={renderField} />\n        {this.props.form.values.type === 'link' && (\n          <Field name='url' label='url' type='url' component={renderField} />\n        )}\n        {this.props.form.values.type === 'text' && (\n          <Field\n            name='text'\n            label='text'\n            type='textarea'\n            component={renderField}\n          />\n        )}\n        <SubmitButton type='submit'>create post</SubmitButton>\n      </Form>\n    );\n  }\n}\n\nexport default CreatePostForm;\n"]},"metadata":{},"sourceType":"module"}