{"ast":null,"code":"import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { reduxForm } from 'redux-form';\nimport { titleValidator, urlValidator, textPostValidator, typeValidator } from '../../util/validators';\nimport { attemptCreatePost } from '../../actions/posts';\nimport categories from '../../categories';\nimport withAuth from '../../util/withAuth';\nimport CreatePostForm from './Component';\n\nvar validate = function validate(fields) {\n  var errors = {};\n  var title = fields.title ? fields.title : '';\n  var url = fields.url ? fields.url : '';\n  var type = fields.type ? fields.type : '';\n  var text = fields.text ? fields.text : '';\n  errors.title = titleValidator(title);\n  if (type === 'link') errors.url = urlValidator(url);\n  if (type === 'text') errors.text = textPostValidator(text);\n  errors.type = typeValidator(type);\n  return errors;\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFetching: state.posts.isFetching,\n    post: state.posts.newPost,\n    form: state.form.createPost\n  };\n};\n\nvar mapDispatchToProps = {\n  attemptCreatePost: attemptCreatePost\n};\nvar enhance = compose(reduxForm({\n  form: 'createPost',\n  initialValues: {\n    category: categories[0],\n    type: 'link'\n  },\n  validate: validate\n}), withAuth, connect(mapStateToProps, mapDispatchToProps));\nvar CreatePostFormContainer = enhance(CreatePostForm);\nexport default CreatePostFormContainer;","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\components\\CreatePostForm\\Container.js"],"names":["connect","compose","reduxForm","titleValidator","urlValidator","textPostValidator","typeValidator","attemptCreatePost","categories","withAuth","CreatePostForm","validate","fields","errors","title","url","type","text","mapStateToProps","state","isFetching","posts","post","newPost","form","createPost","mapDispatchToProps","enhance","initialValues","category","CreatePostFormContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,iBAHF,EAIEC,aAJF,QAKO,uBALP;AAMA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,cAAP,MAA2B,aAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACzB,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAtB,GAA8B,EAA5C;AACA,MAAMC,GAAG,GAAGH,MAAM,CAACG,GAAP,GAAaH,MAAM,CAACG,GAApB,GAA0B,EAAtC;AACA,MAAMC,IAAI,GAAGJ,MAAM,CAACI,IAAP,GAAcJ,MAAM,CAACI,IAArB,GAA4B,EAAzC;AACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAAP,GAAcL,MAAM,CAACK,IAArB,GAA4B,EAAzC;AAEAJ,EAAAA,MAAM,CAACC,KAAP,GAAeX,cAAc,CAACW,KAAD,CAA7B;AACA,MAAIE,IAAI,KAAK,MAAb,EAAqBH,MAAM,CAACE,GAAP,GAAaX,YAAY,CAACW,GAAD,CAAzB;AACrB,MAAIC,IAAI,KAAK,MAAb,EAAqBH,MAAM,CAACI,IAAP,GAAcZ,iBAAiB,CAACY,IAAD,CAA/B;AACrBJ,EAAAA,MAAM,CAACG,IAAP,GAAcV,aAAa,CAACU,IAAD,CAA3B;AAEA,SAAOH,MAAP;AACD,CAbD;;AAeA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAYD,UADQ;AAEhCE,IAAAA,IAAI,EAAEH,KAAK,CAACE,KAAN,CAAYE,OAFc;AAGhCC,IAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWC;AAHe,GAAL;AAAA,CAA7B;;AAMA,IAAMC,kBAAkB,GAAG;AAAEnB,EAAAA,iBAAiB,EAAjBA;AAAF,CAA3B;AAEA,IAAMoB,OAAO,GAAG1B,OAAO,CACrBC,SAAS,CAAC;AACRsB,EAAAA,IAAI,EAAE,YADE;AAERI,EAAAA,aAAa,EAAE;AAAEC,IAAAA,QAAQ,EAAErB,UAAU,CAAC,CAAD,CAAtB;AAA2BQ,IAAAA,IAAI,EAAE;AAAjC,GAFP;AAGRL,EAAAA,QAAQ,EAARA;AAHQ,CAAD,CADY,EAMrBF,QANqB,EAOrBT,OAAO,CACLkB,eADK,EAELQ,kBAFK,CAPc,CAAvB;AAaA,IAAMI,uBAAuB,GAAGH,OAAO,CAACjB,cAAD,CAAvC;AAEA,eAAeoB,uBAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { reduxForm } from 'redux-form';\nimport {\n  titleValidator,\n  urlValidator,\n  textPostValidator,\n  typeValidator\n} from '../../util/validators';\nimport { attemptCreatePost } from '../../actions/posts';\nimport categories from '../../categories';\nimport withAuth from '../../util/withAuth';\nimport CreatePostForm from './Component';\n\nconst validate = fields => {\n  const errors = {};\n  const title = fields.title ? fields.title : '';\n  const url = fields.url ? fields.url : '';\n  const type = fields.type ? fields.type : '';\n  const text = fields.text ? fields.text : '';\n\n  errors.title = titleValidator(title);\n  if (type === 'link') errors.url = urlValidator(url);\n  if (type === 'text') errors.text = textPostValidator(text);\n  errors.type = typeValidator(type);\n\n  return errors;\n};\n\nconst mapStateToProps = state => ({\n  isFetching: state.posts.isFetching,\n  post: state.posts.newPost,\n  form: state.form.createPost\n});\n\nconst mapDispatchToProps = { attemptCreatePost };\n\nconst enhance = compose(\n  reduxForm({\n    form: 'createPost',\n    initialValues: { category: categories[0], type: 'link' },\n    validate\n  }),\n  withAuth,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n);\n\nconst CreatePostFormContainer = enhance(CreatePostForm);\n\nexport default CreatePostFormContainer;\n"]},"metadata":{},"sourceType":"module"}