{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { login, signup } from '../util/api';\nexport var LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport var LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport var LOGIN_ERROR = 'LOGIN_ERROR';\nvar loginRequest = {\n  type: LOGIN_REQUEST\n};\n\nvar loginSuccess = function loginSuccess(token) {\n  return {\n    type: LOGIN_SUCCESS,\n    token: token\n  };\n};\n\nvar loginError = function loginError(error) {\n  return {\n    type: LOGIN_ERROR,\n    error: error\n  };\n};\n\nexport var attemptLogin = function attemptLogin(username, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var token;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(loginRequest);\n                _context.prev = 1;\n                _context.next = 4;\n                return login(username, password);\n\n              case 4:\n                token = _context.sent;\n                dispatch(loginSuccess(token));\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch(loginError(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport var SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport var SIGNUP_ERROR = 'SIGNUP_ERROR';\nvar signupRequest = {\n  type: SIGNUP_REQUEST\n};\n\nvar signupSuccess = function signupSuccess(token) {\n  return {\n    type: SIGNUP_SUCCESS,\n    token: token\n  };\n};\n\nvar signupError = function signupError(error) {\n  return {\n    type: SIGNUP_ERROR,\n    error: error\n  };\n};\n\nexport var attemptSignup = function attemptSignup(username, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var token;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch(signupRequest);\n                _context2.prev = 1;\n                _context2.next = 4;\n                return signup(username, password);\n\n              case 4:\n                token = _context2.sent;\n                dispatch(signupSuccess(token));\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                dispatch(signupError(_context2.t0));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var LOGOUT = 'LOGOUT';\nexport var logout = function logout() {\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\actions\\auth.js"],"names":["login","signup","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","loginRequest","type","loginSuccess","token","loginError","error","attemptLogin","username","password","dispatch","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_ERROR","signupRequest","signupSuccess","signupError","attemptSignup","LOGOUT","logout"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,aAA9B;AAEA,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,IAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAEJ;AAAR,CAArB;;AACA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SAAK;AAAEF,IAAAA,IAAI,EAAEH,aAAR;AAAuBK,IAAAA,KAAK,EAALA;AAAvB,GAAL;AAAA,CAA1B;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEF,WAAR;AAAqBM,IAAAA,KAAK,EAALA;AAArB,GAAL;AAAA,CAAxB;;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClDA,gBAAAA,QAAQ,CAACT,YAAD,CAAR;AADkD;AAAA;AAAA,uBAG5BL,KAAK,CAACY,QAAD,EAAWC,QAAX,CAHuB;;AAAA;AAG1CL,gBAAAA,KAH0C;AAIhDM,gBAAAA,QAAQ,CAACP,YAAY,CAACC,KAAD,CAAb,CAAR;AAJgD;AAAA;;AAAA;AAAA;AAAA;AAMhDM,gBAAAA,QAAQ,CAACL,UAAU,aAAX,CAAR;;AANgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAUP,OAAO,IAAMM,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AAEP,IAAMC,aAAa,GAAG;AAAEZ,EAAAA,IAAI,EAAES;AAAR,CAAtB;;AACA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAX,KAAK;AAAA,SAAK;AAAEF,IAAAA,IAAI,EAAEU,cAAR;AAAwBR,IAAAA,KAAK,EAALA;AAAxB,GAAL;AAAA,CAA3B;;AACA,IAAMY,WAAW,GAAG,SAAdA,WAAc,CAAAV,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEW,YAAR;AAAsBP,IAAAA,KAAK,EAALA;AAAtB,GAAL;AAAA,CAAzB;;AAEA,OAAO,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAACT,QAAD,EAAWC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwB,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnDA,gBAAAA,QAAQ,CAACI,aAAD,CAAR;AADmD;AAAA;AAAA,uBAG7BjB,MAAM,CAACW,QAAD,EAAWC,QAAX,CAHuB;;AAAA;AAG3CL,gBAAAA,KAH2C;AAIjDM,gBAAAA,QAAQ,CAACK,aAAa,CAACX,KAAD,CAAd,CAAR;AAJiD;AAAA;;AAAA;AAAA;AAAA;AAMjDM,gBAAAA,QAAQ,CAACM,WAAW,cAAZ,CAAR;;AANiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAUP,OAAO,IAAME,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAO;AAAEjB,IAAAA,IAAI,EAAEgB;AAAR,GAAP;AAAA,CAAf","sourcesContent":["import { login, signup } from '../util/api';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\n\nconst loginRequest = { type: LOGIN_REQUEST };\nconst loginSuccess = token => ({ type: LOGIN_SUCCESS, token });\nconst loginError = error => ({ type: LOGIN_ERROR, error });\n\nexport const attemptLogin = (username, password) => async dispatch => {\n  dispatch(loginRequest);\n  try {\n    const token = await login(username, password);\n    dispatch(loginSuccess(token));\n  } catch (error) {\n    dispatch(loginError(error));\n  }\n};\n\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\n\nconst signupRequest = { type: SIGNUP_REQUEST };\nconst signupSuccess = token => ({ type: SIGNUP_SUCCESS, token });\nconst signupError = error => ({ type: SIGNUP_ERROR, error });\n\nexport const attemptSignup = (username, password) => async dispatch => {\n  dispatch(signupRequest);\n  try {\n    const token = await signup(username, password);\n    dispatch(signupSuccess(token));\n  } catch (error) {\n    dispatch(signupError(error));\n  }\n};\n\nexport const LOGOUT = 'LOGOUT';\nexport const logout = () => ({ type: LOGOUT });\n"]},"metadata":{},"sourceType":"module"}