{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\src\\\\components\\\\PostDetail\\\\Component.js\";\nimport React from 'react';\nimport LoadingIndicatorBox from '../shared/LoadingIndicator/Box';\nimport Empty from '../shared/Empty';\nimport PostDetailPost from './Post';\nimport PostDetailInfoBarContainer from './InfoBar/Container';\nimport CommentFormContainer from '../CommentForm/Container';\nimport PostDetailCommentSection from './CommentSection';\n\nvar PostDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostDetail, _React$Component);\n\n  function PostDetail() {\n    _classCallCheck(this, PostDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostDetail).apply(this, arguments));\n  }\n\n  _createClass(PostDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchPost(this.props.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.post !== prevProps.post && this.props.post === null) {\n        this.props.history.goBack();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n      if (this.props.isFetching) return React.createElement(LoadingIndicatorBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n      if (!post) return React.createElement(Empty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n      return React.createElement(React.Fragment, null, React.createElement(PostDetailPost, Object.assign({}, post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), React.createElement(PostDetailInfoBarContainer, {\n        id: post.id,\n        views: post.views,\n        upvotePercentage: post.upvotePercentage,\n        author: post.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), this.props.token && React.createElement(CommentFormContainer, {\n        id: post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(PostDetailCommentSection, {\n        comments: post.comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PostDetail;\n}(React.Component);\n\nexport default PostDetail;","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\components\\PostDetail\\Component.js"],"names":["React","LoadingIndicatorBox","Empty","PostDetailPost","PostDetailInfoBarContainer","CommentFormContainer","PostDetailCommentSection","PostDetail","props","fetchPost","id","prevProps","prevState","snapshot","post","history","goBack","isFetching","views","upvotePercentage","author","token","comments","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,cAAP,MAA2B,QAA3B;AACA,OAAOC,0BAAP,MAAuC,qBAAvC;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;AACA,OAAOC,wBAAP,MAAqC,kBAArC;;IAEMC,U;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,EAAhC;AACD;;;uCAEkBC,S,EAAWC,S,EAAWC,Q,EAAU;AACjD,UAAI,KAAKL,KAAL,CAAWM,IAAX,KAAoBH,SAAS,CAACG,IAA9B,IAAsC,KAAKN,KAAL,CAAWM,IAAX,KAAoB,IAA9D,EAAoE;AAClE,aAAKN,KAAL,CAAWO,OAAX,CAAmBC,MAAnB;AACD;AACF;;;6BAEQ;AAAA,UACCF,IADD,GACU,KAAKN,KADf,CACCM,IADD;AAEP,UAAI,KAAKN,KAAL,CAAWS,UAAf,EAA2B,OAAO,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAC3B,UAAI,CAACH,IAAL,EAAW,OAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACX,aACE,0CACE,oBAAC,cAAD,oBAAoBA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,oBAAC,0BAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACJ,EADX;AAEE,QAAA,KAAK,EAAEI,IAAI,CAACI,KAFd;AAGE,QAAA,gBAAgB,EAAEJ,IAAI,CAACK,gBAHzB;AAIE,QAAA,MAAM,EAAEL,IAAI,CAACM,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQG,KAAKZ,KAAL,CAAWa,KAAX,IAAoB,oBAAC,oBAAD;AAAsB,QAAA,EAAE,EAAEP,IAAI,CAACJ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARvB,EASE,oBAAC,wBAAD;AAA0B,QAAA,QAAQ,EAAEI,IAAI,CAACQ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD;;;;EA5BsBtB,KAAK,CAACuB,S;;AA+B/B,eAAehB,UAAf","sourcesContent":["import React from 'react';\nimport LoadingIndicatorBox from '../shared/LoadingIndicator/Box';\nimport Empty from '../shared/Empty';\nimport PostDetailPost from './Post';\nimport PostDetailInfoBarContainer from './InfoBar/Container';\nimport CommentFormContainer from '../CommentForm/Container';\nimport PostDetailCommentSection from './CommentSection';\n\nclass PostDetail extends React.Component {\n  componentDidMount() {\n    this.props.fetchPost(this.props.id);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.post !== prevProps.post && this.props.post === null) {\n      this.props.history.goBack();\n    }\n  }\n\n  render() {\n    const { post } = this.props;\n    if (this.props.isFetching) return <LoadingIndicatorBox />;\n    if (!post) return <Empty />;\n    return (\n      <>\n        <PostDetailPost {...post} />\n        <PostDetailInfoBarContainer\n          id={post.id}\n          views={post.views}\n          upvotePercentage={post.upvotePercentage}\n          author={post.author}\n        />\n        {this.props.token && <CommentFormContainer id={post.id} />}\n        <PostDetailCommentSection comments={post.comments} />\n      </>\n    );\n  }\n}\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}