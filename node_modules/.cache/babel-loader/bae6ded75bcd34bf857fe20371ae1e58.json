{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { getPosts, getProfile, getPost, createPost, deletePost, createComment, deleteComment, castVote } from '../util/api';\nexport var FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\nexport var FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nexport var FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR';\nvar fetchPostsRequest = {\n  type: FETCH_POSTS_REQUEST\n};\n\nvar fetchPostsSuccess = function fetchPostsSuccess(posts) {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    posts: posts\n  };\n};\n\nvar fetchPostsError = function fetchPostsError(error) {\n  return {\n    type: FETCH_POSTS_ERROR,\n    error: error\n  };\n};\n\nexport var fetchPosts = function fetchPosts() {\n  var category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var posts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(fetchPostsRequest);\n                _context.prev = 1;\n                _context.next = 4;\n                return getPosts(category);\n\n              case 4:\n                posts = _context.sent;\n                dispatch(fetchPostsSuccess(posts));\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch(fetchPostsError(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchProfile = function fetchProfile(username) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var posts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch(fetchPostsRequest);\n                _context2.prev = 1;\n                _context2.next = 4;\n                return getProfile(username);\n\n              case 4:\n                posts = _context2.sent;\n                dispatch(fetchPostsSuccess(posts));\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                dispatch(fetchPostsError(_context2.t0));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var FETCH_POST_REQUEST = 'FETCH_POST_REQUEST';\nexport var FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\nexport var FETCH_POST_ERROR = 'FETCH_POST_ERROR';\nvar fetchPostRequest = {\n  type: FETCH_POST_REQUEST\n};\n\nvar fetchPostSuccess = function fetchPostSuccess(post) {\n  return {\n    type: FETCH_POST_SUCCESS,\n    post: post\n  };\n};\n\nvar fetchPostError = function fetchPostError(error) {\n  return {\n    type: FETCH_POST_ERROR,\n    error: error\n  };\n};\n\nexport var fetchPost = function fetchPost(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var post;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch(fetchPostRequest);\n                _context3.prev = 1;\n                _context3.next = 4;\n                return getPost(id);\n\n              case 4:\n                post = _context3.sent;\n                dispatch(fetchPostSuccess(post));\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](1);\n                dispatch(fetchPostError(_context3.t0));\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 8]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\nexport var CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport var CREATE_POST_ERROR = 'CREATE_POST_ERROR';\nvar createPostRequest = {\n  type: CREATE_POST_REQUEST\n};\n\nvar createPostSuccess = function createPostSuccess(post) {\n  return {\n    type: CREATE_POST_SUCCESS,\n    post: post\n  };\n};\n\nvar createPostError = function createPostError(error) {\n  return {\n    type: CREATE_POST_ERROR,\n    error: error\n  };\n};\n\nexport var attemptCreatePost = function attemptCreatePost(post) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n        var token, newPost;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                dispatch(createPostRequest);\n                _context4.prev = 1;\n                token = getState().auth.token;\n                _context4.next = 5;\n                return createPost(post, token);\n\n              case 5:\n                newPost = _context4.sent;\n                dispatch(createPostSuccess(newPost));\n                _context4.next = 12;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](1);\n                dispatch(createPostError(_context4.t0));\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 9]]);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport var DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport var DELETE_POST_ERROR = 'DELETE_POST_ERROR';\nvar deletePostRequest = {\n  type: DELETE_POST_REQUEST\n};\n\nvar deletePostSuccess = function deletePostSuccess(post) {\n  return {\n    type: DELETE_POST_SUCCESS,\n    post: post\n  };\n};\n\nvar deletePostError = function deletePostError(error) {\n  return {\n    type: DELETE_POST_ERROR,\n    error: error\n  };\n};\n\nexport var attemptDeletePost = function attemptDeletePost() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n        var id, token;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                dispatch(deletePostRequest);\n                _context5.prev = 1;\n                id = getState().posts.post.id;\n                token = getState().auth.token;\n                _context5.next = 6;\n                return deletePost(id, token);\n\n              case 6:\n                dispatch(deletePostSuccess(id));\n                _context5.next = 12;\n                break;\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](1);\n                dispatch(deletePostError(_context5.t0));\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 9]]);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var CREATE_COMMENT_REQUEST = 'CREATE_COMMENT_REQUEST';\nexport var CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\nexport var CREATE_COMMENT_ERROR = 'CREATE_COMMENT_ERROR';\nvar createCommentRequest = {\n  type: CREATE_COMMENT_REQUEST\n};\n\nvar createCommentSuccess = function createCommentSuccess(post) {\n  return {\n    type: CREATE_COMMENT_SUCCESS,\n    post: post\n  };\n};\n\nvar createCommentError = function createCommentError(error) {\n  return {\n    type: CREATE_COMMENT_ERROR,\n    error: error\n  };\n};\n\nexport var attemptCreateComment = function attemptCreateComment(comment) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n        var post, token, json;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                dispatch(createCommentRequest);\n                _context6.prev = 1;\n                post = getState().posts.post.id;\n                token = getState().auth.token;\n                _context6.next = 6;\n                return createComment(post, comment, token);\n\n              case 6:\n                json = _context6.sent;\n                dispatch(createCommentSuccess(json));\n                _context6.next = 13;\n                break;\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](1);\n                dispatch(createCommentError(_context6.t0));\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 10]]);\n      }));\n\n      return function (_x8, _x9) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var DELETE_COMMENT_REQUEST = 'DELETE_COMMENT_REQUEST';\nexport var DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\nexport var DELETE_COMMENT_ERROR = 'DELETE_COMMENT_ERROR';\nvar deleteCommentRequest = {\n  type: DELETE_COMMENT_REQUEST\n};\n\nvar deleteCommentSuccess = function deleteCommentSuccess(post) {\n  return {\n    type: DELETE_COMMENT_SUCCESS,\n    post: post\n  };\n};\n\nvar deleteCommentError = function deleteCommentError(error) {\n  return {\n    type: DELETE_COMMENT_ERROR,\n    error: error\n  };\n};\n\nexport var attemptDeleteComment = function attemptDeleteComment(comment) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch, getState) {\n        var post, token, json;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                dispatch(deleteCommentRequest);\n                _context7.prev = 1;\n                post = getState().posts.post.id;\n                token = getState().auth.token;\n                _context7.next = 6;\n                return deleteComment(post, comment, token);\n\n              case 6:\n                json = _context7.sent;\n                dispatch(deleteCommentSuccess(json));\n                _context7.next = 13;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](1);\n                dispatch(deleteCommentError(_context7.t0));\n\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 10]]);\n      }));\n\n      return function (_x10, _x11) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var VOTE_REQUEST = 'VOTE_REQUEST';\nexport var VOTE_SUCCESS = 'VOTE_SUCCESS';\nexport var VOTE_ERROR = 'VOTE_ERROR';\nvar voteRequest = {\n  type: VOTE_REQUEST\n};\n\nvar voteSuccess = function voteSuccess(post) {\n  return {\n    type: VOTE_SUCCESS,\n    post: post\n  };\n};\n\nvar voteError = function voteError(error) {\n  return {\n    type: VOTE_ERROR,\n    error: error\n  };\n};\n\nexport var attemptVote = function attemptVote(id, vote) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(dispatch, getState) {\n        var token, post;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                dispatch(voteRequest);\n                _context8.prev = 1;\n                token = getState().auth.token;\n                _context8.next = 5;\n                return castVote(id, vote, token);\n\n              case 5:\n                post = _context8.sent;\n                dispatch(voteSuccess(post));\n                _context8.next = 12;\n                break;\n\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](1);\n                dispatch(voteError(_context8.t0));\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[1, 9]]);\n      }));\n\n      return function (_x12, _x13) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\actions\\posts.js"],"names":["getPosts","getProfile","getPost","createPost","deletePost","createComment","deleteComment","castVote","FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_ERROR","fetchPostsRequest","type","fetchPostsSuccess","posts","fetchPostsError","error","fetchPosts","category","dispatch","fetchProfile","username","FETCH_POST_REQUEST","FETCH_POST_SUCCESS","FETCH_POST_ERROR","fetchPostRequest","fetchPostSuccess","post","fetchPostError","fetchPost","id","CREATE_POST_REQUEST","CREATE_POST_SUCCESS","CREATE_POST_ERROR","createPostRequest","createPostSuccess","createPostError","attemptCreatePost","getState","token","auth","newPost","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_ERROR","deletePostRequest","deletePostSuccess","deletePostError","attemptDeletePost","CREATE_COMMENT_REQUEST","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_ERROR","createCommentRequest","createCommentSuccess","createCommentError","attemptCreateComment","comment","json","DELETE_COMMENT_REQUEST","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_ERROR","deleteCommentRequest","deleteCommentSuccess","deleteCommentError","attemptDeleteComment","VOTE_REQUEST","VOTE_SUCCESS","VOTE_ERROR","voteRequest","voteSuccess","voteError","attemptVote","vote"],"mappings":";;AAAA,SACEA,QADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,aAPF,EAQEC,QARF,QASO,aATP;AAWA,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,IAAMC,iBAAiB,GAAG;AAAEC,EAAAA,IAAI,EAAEJ;AAAR,CAA1B;;AACA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,SAAK;AAAEF,IAAAA,IAAI,EAAEH,mBAAR;AAA6BK,IAAAA,KAAK,EAALA;AAA7B,GAAL;AAAA,CAA/B;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEF,iBAAR;AAA2BM,IAAAA,KAAK,EAALA;AAA3B,GAAL;AAAA,CAA7B;;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAACC,QAAD,uEAAY,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAmB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3CA,gBAAAA,QAAQ,CAACR,iBAAD,CAAR;AAD2C;AAAA;AAAA,uBAGrBX,QAAQ,CAACkB,QAAD,CAHa;;AAAA;AAGnCJ,gBAAAA,KAHmC;AAIzCK,gBAAAA,QAAQ,CAACN,iBAAiB,CAACC,KAAD,CAAlB,CAAR;AAJyC;AAAA;;AAAA;AAAA;AAAA;AAMzCK,gBAAAA,QAAQ,CAACJ,eAAe,aAAhB,CAAR;;AANyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAUP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMF,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtCA,gBAAAA,QAAQ,CAACR,iBAAD,CAAR;AADsC;AAAA;AAAA,uBAGhBV,UAAU,CAACoB,QAAD,CAHM;;AAAA;AAG9BP,gBAAAA,KAH8B;AAIpCK,gBAAAA,QAAQ,CAACN,iBAAiB,CAACC,KAAD,CAAlB,CAAR;AAJoC;AAAA;;AAAA;AAAA;AAAA;AAMpCK,gBAAAA,QAAQ,CAACJ,eAAe,cAAhB,CAAR;;AANoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAUP,OAAO,IAAMO,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,IAAMC,gBAAgB,GAAG;AAAEb,EAAAA,IAAI,EAAEU;AAAR,CAAzB;;AACA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI;AAAA,SAAK;AAAEf,IAAAA,IAAI,EAAEW,kBAAR;AAA4BI,IAAAA,IAAI,EAAJA;AAA5B,GAAL;AAAA,CAA7B;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAZ,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEY,gBAAR;AAA0BR,IAAAA,KAAK,EAALA;AAA1B,GAAL;AAAA,CAA5B;;AAEA,OAAO,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMX,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BA,gBAAAA,QAAQ,CAACM,gBAAD,CAAR;AAD6B;AAAA;AAAA,uBAGRvB,OAAO,CAAC4B,EAAD,CAHC;;AAAA;AAGrBH,gBAAAA,IAHqB;AAI3BR,gBAAAA,QAAQ,CAACO,gBAAgB,CAACC,IAAD,CAAjB,CAAR;AAJ2B;AAAA;;AAAA;AAAA;AAAA;AAM3BR,gBAAAA,QAAQ,CAACS,cAAc,cAAf,CAAR;;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAUP,OAAO,IAAMG,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,IAAMC,iBAAiB,GAAG;AAAEtB,EAAAA,IAAI,EAAEmB;AAAR,CAA1B;;AACA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAR,IAAI;AAAA,SAAK;AAAEf,IAAAA,IAAI,EAAEoB,mBAAR;AAA6BL,IAAAA,IAAI,EAAJA;AAA7B,GAAL;AAAA,CAA9B;;AACA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAAApB,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEqB,iBAAR;AAA2BjB,IAAAA,KAAK,EAALA;AAA3B,GAAL;AAAA,CAA7B;;AAEA,OAAO,IAAMqB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAV,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAOR,QAAP,EAAiBmB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvCnB,gBAAAA,QAAQ,CAACe,iBAAD,CAAR;AADuC;AAG7BK,gBAAAA,KAH6B,GAGnBD,QAAQ,GAAGE,IAHQ,CAG7BD,KAH6B;AAAA;AAAA,uBAIfpC,UAAU,CAACwB,IAAD,EAAOY,KAAP,CAJK;;AAAA;AAI/BE,gBAAAA,OAJ+B;AAKrCtB,gBAAAA,QAAQ,CAACgB,iBAAiB,CAACM,OAAD,CAAlB,CAAR;AALqC;AAAA;;AAAA;AAAA;AAAA;AAOrCtB,gBAAAA,QAAQ,CAACiB,eAAe,cAAhB,CAAR;;AAPqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;AAWP,OAAO,IAAMM,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,IAAMC,iBAAiB,GAAG;AAAEjC,EAAAA,IAAI,EAAE8B;AAAR,CAA1B;;AACA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAnB,IAAI;AAAA,SAAK;AAAEf,IAAAA,IAAI,EAAE+B,mBAAR;AAA6BhB,IAAAA,IAAI,EAAJA;AAA7B,GAAL;AAAA,CAA9B;;AACA,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAA/B,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEgC,iBAAR;AAA2B5B,IAAAA,KAAK,EAALA;AAA3B,GAAL;AAAA,CAA7B;;AAEA,OAAO,IAAMgC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAO7B,QAAP,EAAiBmB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACrCnB,gBAAAA,QAAQ,CAAC0B,iBAAD,CAAR;AADqC;AAG3Bf,gBAAAA,EAH2B,GAGpBQ,QAAQ,GAAGxB,KAAX,CAAiBa,IAHG,CAG3BG,EAH2B;AAI3BS,gBAAAA,KAJ2B,GAIjBD,QAAQ,GAAGE,IAJM,CAI3BD,KAJ2B;AAAA;AAAA,uBAK7BnC,UAAU,CAAC0B,EAAD,EAAKS,KAAL,CALmB;;AAAA;AAMnCpB,gBAAAA,QAAQ,CAAC2B,iBAAiB,CAAChB,EAAD,CAAlB,CAAR;AANmC;AAAA;;AAAA;AAAA;AAAA;AAQnCX,gBAAAA,QAAQ,CAAC4B,eAAe,cAAhB,CAAR;;AARmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAYP,OAAO,IAAME,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,IAAMC,oBAAoB,GAAG;AAAExC,EAAAA,IAAI,EAAEqC;AAAR,CAA7B;;AACA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA1B,IAAI;AAAA,SAAK;AAAEf,IAAAA,IAAI,EAAEsC,sBAAR;AAAgCvB,IAAAA,IAAI,EAAJA;AAAhC,GAAL;AAAA,CAAjC;;AACA,IAAM2B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAtC,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEuC,oBAAR;AAA8BnC,IAAAA,KAAK,EAALA;AAA9B,GAAL;AAAA,CAAhC;;AAEA,OAAO,IAAMuC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAOrC,QAAP,EAAiBmB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CnB,gBAAAA,QAAQ,CAACiC,oBAAD,CAAR;AAD6C;AAG/BzB,gBAAAA,IAH+B,GAGtBW,QAAQ,GAAGxB,KAAX,CAAiBa,IAHK,CAGnCG,EAHmC;AAInCS,gBAAAA,KAJmC,GAIzBD,QAAQ,GAAGE,IAJc,CAInCD,KAJmC;AAAA;AAAA,uBAKxBlC,aAAa,CAACsB,IAAD,EAAO6B,OAAP,EAAgBjB,KAAhB,CALW;;AAAA;AAKrCkB,gBAAAA,IALqC;AAM3CtC,gBAAAA,QAAQ,CAACkC,oBAAoB,CAACI,IAAD,CAArB,CAAR;AAN2C;AAAA;;AAAA;AAAA;AAAA;AAQ3CtC,gBAAAA,QAAQ,CAACmC,kBAAkB,cAAnB,CAAR;;AAR2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApC;AAYP,OAAO,IAAMI,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,IAAMC,oBAAoB,GAAG;AAAEjD,EAAAA,IAAI,EAAE8C;AAAR,CAA7B;;AACA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAnC,IAAI;AAAA,SAAK;AAAEf,IAAAA,IAAI,EAAE+C,sBAAR;AAAgChC,IAAAA,IAAI,EAAJA;AAAhC,GAAL;AAAA,CAAjC;;AACA,IAAMoC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA/C,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEgD,oBAAR;AAA8B5C,IAAAA,KAAK,EAALA;AAA9B,GAAL;AAAA,CAAhC;;AAEA,OAAO,IAAMgD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAR,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAOrC,QAAP,EAAiBmB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CnB,gBAAAA,QAAQ,CAAC0C,oBAAD,CAAR;AAD6C;AAG/BlC,gBAAAA,IAH+B,GAGtBW,QAAQ,GAAGxB,KAAX,CAAiBa,IAHK,CAGnCG,EAHmC;AAInCS,gBAAAA,KAJmC,GAIzBD,QAAQ,GAAGE,IAJc,CAInCD,KAJmC;AAAA;AAAA,uBAKxBjC,aAAa,CAACqB,IAAD,EAAO6B,OAAP,EAAgBjB,KAAhB,CALW;;AAAA;AAKrCkB,gBAAAA,IALqC;AAM3CtC,gBAAAA,QAAQ,CAAC2C,oBAAoB,CAACL,IAAD,CAArB,CAAR;AAN2C;AAAA;;AAAA;AAAA;AAAA;AAQ3CtC,gBAAAA,QAAQ,CAAC4C,kBAAkB,cAAnB,CAAR;;AAR2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApC;AAYP,OAAO,IAAME,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AAEP,IAAMC,WAAW,GAAG;AAAExD,EAAAA,IAAI,EAAEqD;AAAR,CAApB;;AACA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAA1C,IAAI;AAAA,SAAK;AAAEf,IAAAA,IAAI,EAAEsD,YAAR;AAAsBvC,IAAAA,IAAI,EAAJA;AAAtB,GAAL;AAAA,CAAxB;;AACA,IAAM2C,SAAS,GAAG,SAAZA,SAAY,CAAAtD,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEuD,UAAR;AAAoBnD,IAAAA,KAAK,EAALA;AAApB,GAAL;AAAA,CAAvB;;AAEA,OAAO,IAAMuD,WAAW,GAAG,SAAdA,WAAc,CAACzC,EAAD,EAAK0C,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAc,kBAAOrD,QAAP,EAAiBmB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvCnB,gBAAAA,QAAQ,CAACiD,WAAD,CAAR;AADuC;AAG7B7B,gBAAAA,KAH6B,GAGnBD,QAAQ,GAAGE,IAHQ,CAG7BD,KAH6B;AAAA;AAAA,uBAIlBhC,QAAQ,CAACuB,EAAD,EAAK0C,IAAL,EAAWjC,KAAX,CAJU;;AAAA;AAI/BZ,gBAAAA,IAJ+B;AAKrCR,gBAAAA,QAAQ,CAACkD,WAAW,CAAC1C,IAAD,CAAZ,CAAR;AALqC;AAAA;;AAAA;AAAA;AAAA;AAOrCR,gBAAAA,QAAQ,CAACmD,SAAS,cAAV,CAAR;;AAPqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import {\n  getPosts,\n  getProfile,\n  getPost,\n  createPost,\n  deletePost,\n  createComment,\n  deleteComment,\n  castVote\n} from '../util/api';\n\nexport const FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nexport const FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR';\n\nconst fetchPostsRequest = { type: FETCH_POSTS_REQUEST };\nconst fetchPostsSuccess = posts => ({ type: FETCH_POSTS_SUCCESS, posts });\nconst fetchPostsError = error => ({ type: FETCH_POSTS_ERROR, error });\n\nexport const fetchPosts = (category = '') => async dispatch => {\n  dispatch(fetchPostsRequest);\n  try {\n    const posts = await getPosts(category);\n    dispatch(fetchPostsSuccess(posts));\n  } catch (error) {\n    dispatch(fetchPostsError(error));\n  }\n};\n\nexport const fetchProfile = username => async dispatch => {\n  dispatch(fetchPostsRequest);\n  try {\n    const posts = await getProfile(username);\n    dispatch(fetchPostsSuccess(posts));\n  } catch (error) {\n    dispatch(fetchPostsError(error));\n  }\n};\n\nexport const FETCH_POST_REQUEST = 'FETCH_POST_REQUEST';\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\nexport const FETCH_POST_ERROR = 'FETCH_POST_ERROR';\n\nconst fetchPostRequest = { type: FETCH_POST_REQUEST };\nconst fetchPostSuccess = post => ({ type: FETCH_POST_SUCCESS, post });\nconst fetchPostError = error => ({ type: FETCH_POST_ERROR, error });\n\nexport const fetchPost = id => async dispatch => {\n  dispatch(fetchPostRequest);\n  try {\n    const post = await getPost(id);\n    dispatch(fetchPostSuccess(post));\n  } catch (error) {\n    dispatch(fetchPostError(error));\n  }\n};\n\nexport const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport const CREATE_POST_ERROR = 'CREATE_POST_ERROR';\n\nconst createPostRequest = { type: CREATE_POST_REQUEST };\nconst createPostSuccess = post => ({ type: CREATE_POST_SUCCESS, post });\nconst createPostError = error => ({ type: CREATE_POST_ERROR, error });\n\nexport const attemptCreatePost = post => async (dispatch, getState) => {\n  dispatch(createPostRequest);\n  try {\n    const { token } = getState().auth;\n    const newPost = await createPost(post, token);\n    dispatch(createPostSuccess(newPost));\n  } catch (error) {\n    dispatch(createPostError(error));\n  }\n};\n\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_ERROR = 'DELETE_POST_ERROR';\n\nconst deletePostRequest = { type: DELETE_POST_REQUEST };\nconst deletePostSuccess = post => ({ type: DELETE_POST_SUCCESS, post });\nconst deletePostError = error => ({ type: DELETE_POST_ERROR, error });\n\nexport const attemptDeletePost = () => async (dispatch, getState) => {\n  dispatch(deletePostRequest);\n  try {\n    const { id } = getState().posts.post;\n    const { token } = getState().auth;\n    await deletePost(id, token);\n    dispatch(deletePostSuccess(id));\n  } catch (error) {\n    dispatch(deletePostError(error));\n  }\n};\n\nexport const CREATE_COMMENT_REQUEST = 'CREATE_COMMENT_REQUEST';\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\nexport const CREATE_COMMENT_ERROR = 'CREATE_COMMENT_ERROR';\n\nconst createCommentRequest = { type: CREATE_COMMENT_REQUEST };\nconst createCommentSuccess = post => ({ type: CREATE_COMMENT_SUCCESS, post });\nconst createCommentError = error => ({ type: CREATE_COMMENT_ERROR, error });\n\nexport const attemptCreateComment = comment => async (dispatch, getState) => {\n  dispatch(createCommentRequest);\n  try {\n    const { id: post } = getState().posts.post;\n    const { token } = getState().auth;\n    const json = await createComment(post, comment, token);\n    dispatch(createCommentSuccess(json));\n  } catch (error) {\n    dispatch(createCommentError(error));\n  }\n};\n\nexport const DELETE_COMMENT_REQUEST = 'DELETE_COMMENT_REQUEST';\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\nexport const DELETE_COMMENT_ERROR = 'DELETE_COMMENT_ERROR';\n\nconst deleteCommentRequest = { type: DELETE_COMMENT_REQUEST };\nconst deleteCommentSuccess = post => ({ type: DELETE_COMMENT_SUCCESS, post });\nconst deleteCommentError = error => ({ type: DELETE_COMMENT_ERROR, error });\n\nexport const attemptDeleteComment = comment => async (dispatch, getState) => {\n  dispatch(deleteCommentRequest);\n  try {\n    const { id: post } = getState().posts.post;\n    const { token } = getState().auth;\n    const json = await deleteComment(post, comment, token);\n    dispatch(deleteCommentSuccess(json));\n  } catch (error) {\n    dispatch(deleteCommentError(error));\n  }\n};\n\nexport const VOTE_REQUEST = 'VOTE_REQUEST';\nexport const VOTE_SUCCESS = 'VOTE_SUCCESS';\nexport const VOTE_ERROR = 'VOTE_ERROR';\n\nconst voteRequest = { type: VOTE_REQUEST };\nconst voteSuccess = post => ({ type: VOTE_SUCCESS, post });\nconst voteError = error => ({ type: VOTE_ERROR, error });\n\nexport const attemptVote = (id, vote) => async (dispatch, getState) => {\n  dispatch(voteRequest);\n  try {\n    const { token } = getState().auth;\n    const post = await castVote(id, vote, token);\n    dispatch(voteSuccess(post));\n  } catch (error) {\n    dispatch(voteError(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}