{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\src\\\\components\\\\PostList\\\\Component.js\";\nimport React from 'react';\nimport PostListItem from './Item';\nimport LoadingIndicatorBox from '../shared/LoadingIndicator/Box';\nimport Empty from '../shared/Empty';\n\nvar List = _styled.ul.withConfig({\n  displayName: \"Component__List\",\n  componentId: \"sc-jyfunr-0\"\n})([\"list-style:none;border:1px solid \", \";border-radius:2px;@media (max-width:768px){border-top:none;border-left:none;border-right:none;border-radius:0;}\"], function (props) {\n  return props.theme.border;\n});\n\nvar PostList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostList, _React$Component);\n\n  function PostList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.loadPosts = function () {\n      var _this$props = _this.props,\n          username = _this$props.username,\n          category = _this$props.category;\n      if (username) return _this.props.fetchProfile(username);\n      return _this.props.fetchPosts(category);\n    };\n\n    _this.mapPosts = function () {\n      return _this.props.posts.map(function (post, index) {\n        return React.createElement(PostListItem, Object.assign({\n          key: index\n        }, post, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadPosts();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.category !== prevProps.category || this.props.username !== prevProps.username) this.loadPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.isFetching) return React.createElement(LoadingIndicatorBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n      if (!this.props.posts || this.props.posts.length === 0) return React.createElement(Empty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n      return React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.mapPosts());\n    }\n  }]);\n\n  return PostList;\n}(React.Component);\n\nexport default PostList;","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\components\\PostList\\Component.js"],"names":["React","PostListItem","LoadingIndicatorBox","Empty","List","styled","ul","props","theme","border","PostList","loadPosts","username","category","fetchProfile","fetchPosts","mapPosts","posts","map","post","index","prevProps","prevState","snapshot","isFetching","length","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,QAAzB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,IAAMC,IAAI,GAAGC,OAAM,CAACC,EAAV;AAAA;AAAA;AAAA,8JAEY,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAhB;AAAA,CAFjB,CAAV;;IAaMC,Q;;;;;;;;;;;;;;;;;;UACJC,S,GAAY,YAAM;AAAA,wBACe,MAAKJ,KADpB;AAAA,UACRK,QADQ,eACRA,QADQ;AAAA,UACEC,QADF,eACEA,QADF;AAEhB,UAAID,QAAJ,EAAc,OAAO,MAAKL,KAAL,CAAWO,YAAX,CAAwBF,QAAxB,CAAP;AACd,aAAO,MAAKL,KAAL,CAAWQ,UAAX,CAAsBF,QAAtB,CAAP;AACD,K;;UAcDG,Q,GAAW;AAAA,aACT,MAAKT,KAAL,CAAWU,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP;AAAA,eACnB,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA;AAAnB,WAA8BD,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADmB;AAAA,OAArB,CADS;AAAA,K;;;;;;;wCAZS;AAClB,WAAKR,SAAL;AACD;;;uCAEkBU,S,EAAWC,S,EAAWC,Q,EAAU;AACjD,UACE,KAAKhB,KAAL,CAAWM,QAAX,KAAwBQ,SAAS,CAACR,QAAlC,IACA,KAAKN,KAAL,CAAWK,QAAX,KAAwBS,SAAS,CAACT,QAFpC,EAIE,KAAKD,SAAL;AACH;;;6BAOQ;AACP,UAAI,KAAKJ,KAAL,CAAWiB,UAAf,EAA2B,OAAO,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAC3B,UAAI,CAAC,KAAKjB,KAAL,CAAWU,KAAZ,IAAqB,KAAKV,KAAL,CAAWU,KAAX,CAAiBQ,MAAjB,KAA4B,CAArD,EAAwD,OAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxD,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKT,QAAL,EAAP,CAAP;AACD;;;;EA5BoBhB,KAAK,CAAC0B,S;;AA+B7B,eAAehB,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/macro';\nimport PostListItem from './Item';\nimport LoadingIndicatorBox from '../shared/LoadingIndicator/Box';\nimport Empty from '../shared/Empty';\n\nconst List = styled.ul`\n  list-style: none;\n  border: 1px solid ${props => props.theme.border};\n  border-radius: 2px;\n\n  @media (max-width: 768px) {\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-radius: 0;\n  }\n`;\n\nclass PostList extends React.Component {\n  loadPosts = () => {\n    const { username, category } = this.props;\n    if (username) return this.props.fetchProfile(username);\n    return this.props.fetchPosts(category);\n  };\n\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      this.props.category !== prevProps.category ||\n      this.props.username !== prevProps.username\n    )\n      this.loadPosts();\n  }\n\n  mapPosts = () =>\n    this.props.posts.map((post, index) => (\n      <PostListItem key={index} {...post} />\n    ));\n\n  render() {\n    if (this.props.isFetching) return <LoadingIndicatorBox />;\n    if (!this.props.posts || this.props.posts.length === 0) return <Empty />;\n    return <List>{this.mapPosts()}</List>;\n  }\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}