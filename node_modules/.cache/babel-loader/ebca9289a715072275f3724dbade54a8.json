{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\src\\\\components\\\\Post\\\\Content\\\\Title.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { overflow, link } from '../../shared/helpers';\n\nvar Wrapper = _styled.div.withConfig({\n  displayName: \"Title__Wrapper\",\n  componentId: \"sc-wirykt-0\"\n})([\"display:flex;*{\", \";display:block;font-size:15px;line-height:21px;font-weight:500;text-decoration:none;color:\", \";\", \";}a{\", \";}\"], overflow, function (props) {\n  return props.theme.normalText;\n}, function (props) {\n  return props.full && 'white-space: unset';\n}, link({\n  underline: true\n}));\n\nvar renderTitle = function renderTitle(props) {\n  switch (props.type) {\n    case 'link':\n      return React.createElement(\"a\", {\n        href: props.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, props.title);\n\n    case 'text':\n      if (props.full) return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, props.title);\n      return React.createElement(Link, {\n        to: \"/a/\".concat(props.category, \"/\").concat(props.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, props.title);\n\n    default:\n      break;\n  }\n};\n\nvar PostContentTitle = function PostContentTitle(props) {\n  return React.createElement(Wrapper, {\n    full: props.full,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, renderTitle(props));\n};\n\nexport default PostContentTitle;","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\components\\Post\\Content\\Title.js"],"names":["React","Link","overflow","link","Wrapper","styled","div","props","theme","normalText","full","underline","renderTitle","type","url","title","category","id","PostContentTitle"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,sBAA/B;;AAEA,IAAMC,OAAO,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,yIAIPJ,QAJO,EAWA,UAAAK,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,UAAhB;AAAA,CAXL,EAYP,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACG,IAAN,IAAc,oBAAlB;AAAA,CAZE,EAgBPP,IAAI,CAAC;AAAEQ,EAAAA,SAAS,EAAE;AAAb,CAAD,CAhBG,CAAb;;AAoBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAL,KAAK,EAAI;AAC3B,UAAQA,KAAK,CAACM,IAAd;AACE,SAAK,MAAL;AACE,aAAO;AAAG,QAAA,IAAI,EAAEN,KAAK,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBP,KAAK,CAACQ,KAA3B,CAAP;;AAEF,SAAK,MAAL;AACE,UAAIR,KAAK,CAACG,IAAV,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,KAAK,CAACQ,KAAb,CAAP;AAChB,aAAO,oBAAC,IAAD;AAAM,QAAA,EAAE,eAAQR,KAAK,CAACS,QAAd,cAA0BT,KAAK,CAACU,EAAhC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CV,KAAK,CAACQ,KAArD,CAAP;;AAEF;AACE;AATJ;AAWD,CAZD;;AAcA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAX,KAAK;AAAA,SAC5B,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,KAAK,CAACG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BE,WAAW,CAACL,KAAD,CAAvC,CAD4B;AAAA,CAA9B;;AAIA,eAAeW,gBAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nimport { overflow, link } from '../../shared/helpers';\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  * {\n    ${overflow};\n\n    display: block;\n    font-size: 15px;\n    line-height: 21px;\n    font-weight: 500;\n    text-decoration: none;\n    color: ${props => props.theme.normalText};\n    ${props => props.full && 'white-space: unset'};\n  }\n\n  a {\n    ${link({ underline: true })};\n  }\n`;\n\nconst renderTitle = props => {\n  switch (props.type) {\n    case 'link':\n      return <a href={props.url}>{props.title}</a>;\n\n    case 'text':\n      if (props.full) return <span>{props.title}</span>;\n      return <Link to={`/a/${props.category}/${props.id}`}>{props.title}</Link>;\n\n    default:\n      break;\n  }\n};\n\nconst PostContentTitle = props => (\n  <Wrapper full={props.full}>{renderTitle(props)}</Wrapper>\n);\n\nexport default PostContentTitle;\n"]},"metadata":{},"sourceType":"module"}