{"ast":null,"code":"'use strict';\n\nmodule.exports = breaks;\n\nfunction breaks() {\n  var parser = this.Parser;\n  var tokenizers;\n\n  if (!isRemarkParser(parser)) {\n    throw new Error('Missing parser to attach `remark-breaks` to');\n  }\n\n  tokenizers = parser.prototype.inlineTokenizers;\n  tokenizeBreak.locator = tokenizers.break.locator;\n  tokenizers.break = tokenizeBreak;\n\n  function tokenizeBreak(eat, value, silent) {\n    var length = value.length;\n    var index = -1;\n    var queue = '';\n    var character;\n\n    while (++index < length) {\n      character = value.charAt(index);\n\n      if (character === '\\n') {\n        /* istanbul ignore if - never used (yet) */\n        if (silent) {\n          return true;\n        }\n\n        queue += character;\n        return eat(queue)({\n          type: 'break'\n        });\n      }\n\n      if (character !== ' ') {\n        return;\n      }\n\n      queue += character;\n    }\n  }\n}\n\nfunction isRemarkParser(parser) {\n  return Boolean(parser && parser.prototype && parser.prototype.inlineTokenizers && parser.prototype.inlineTokenizers.break && parser.prototype.inlineTokenizers.break.locator);\n}","map":null,"metadata":{},"sourceType":"script"}