{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\src\\\\components\\\\shared\\\\form\\\\renderField.js\";\nimport React from 'react';\nimport InputWrapper from './InputWrapper';\nimport Label from './Label';\nimport Error from './Error';\nimport SelectWrapper from './SelectWrapper';\nimport Input from './Input';\nimport RadioGroup from './RadioGroup';\n\nvar VariableField = function VariableField(field) {\n  switch (field.type) {\n    case 'select':\n      return React.createElement(InputWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, field.label), field.meta.touched && field.meta.error && React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, field.meta.error), React.createElement(SelectWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({}, field.input, {\n        as: \"select\",\n        type: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), field.children)));\n\n    case 'radiogroup':\n      return React.createElement(InputWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        field: field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n\n    case 'textarea':\n      return React.createElement(InputWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, field.label), field.meta.touched && field.meta.error && React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, field.meta.error), React.createElement(Input, Object.assign({}, field.input, {\n        as: \"textarea\",\n        rows: \"6\",\n        error: field.meta.touched && !!field.meta.error,\n        placeholder: field.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n\n    default:\n      return React.createElement(InputWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, field.label), field.meta.touched && field.meta.error && React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, field.meta.error), React.createElement(Input, Object.assign({}, field.input, {\n        error: field.meta.touched && !!field.meta.error,\n        type: field.type,\n        placeholder: field.label,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n  }\n};\n\nvar renderField = function renderField(field) {\n  return React.createElement(VariableField, Object.assign({}, field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default renderField;","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\components\\shared\\form\\renderField.js"],"names":["React","InputWrapper","Label","Error","SelectWrapper","Input","RadioGroup","VariableField","field","type","label","meta","touched","error","input","children","renderField"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputWrapper from './InputWrapper';\nimport Label from './Label';\nimport Error from './Error';\nimport SelectWrapper from './SelectWrapper';\nimport Input from './Input';\nimport RadioGroup from './RadioGroup';\n\nconst VariableField = field => {\n  switch (field.type) {\n    case 'select':\n      return (\n        <InputWrapper>\n          <Label>{field.label}</Label>\n          {field.meta.touched && field.meta.error && (\n            <Error>{field.meta.error}</Error>\n          )}\n          <SelectWrapper>\n            <Input {...field.input} as='select' type='select'>\n              {field.children}\n            </Input>\n          </SelectWrapper>\n        </InputWrapper>\n      );\n\n    case 'radiogroup':\n      return (\n        <InputWrapper>\n          <RadioGroup field={field} />\n        </InputWrapper>\n      );\n\n    case 'textarea':\n      return (\n        <InputWrapper>\n          <Label>{field.label}</Label>\n          {field.meta.touched && field.meta.error && (\n            <Error>{field.meta.error}</Error>\n          )}\n          <Input\n            {...field.input}\n            as='textarea'\n            rows='6'\n            error={field.meta.touched && !!field.meta.error}\n            placeholder={field.label}\n          />\n        </InputWrapper>\n      );\n\n    default:\n      return (\n        <InputWrapper>\n          <Label>{field.label}</Label>\n          {field.meta.touched && field.meta.error && (\n            <Error>{field.meta.error}</Error>\n          )}\n          <Input\n            {...field.input}\n            error={field.meta.touched && !!field.meta.error}\n            type={field.type}\n            placeholder={field.label}\n            autoComplete='off'\n          />\n        </InputWrapper>\n      );\n  }\n};\n\nconst renderField = field => {\n  return <VariableField {...field} />;\n};\n\nexport default renderField;\n"]},"metadata":{},"sourceType":"module"}