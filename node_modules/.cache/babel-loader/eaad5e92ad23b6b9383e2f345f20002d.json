{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Techdotpk\\\\Desktop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport jwtDecode from 'jwt-decode';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_ERROR, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_ERROR, LOGOUT } from '../actions/auth';\nvar token = localStorage.getItem('token');\nvar user = token && jwtDecode(token).user;\n\nvar initialState = _objectSpread({}, token && {\n  token: token\n}, user && {\n  user: user\n});\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGNUP_REQUEST:\n    case LOGIN_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SIGNUP_SUCCESS:\n    case LOGIN_SUCCESS:\n      var _user = jwtDecode(action.token).user;\n      return _objectSpread({}, state, {\n        loading: false,\n        token: action.token,\n        user: _user\n      });\n\n    case SIGNUP_ERROR:\n    case LOGIN_ERROR:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        token: null,\n        user: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Techdotpk\\Desktop\\client\\src\\reducers\\auth.js"],"names":["jwtDecode","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_ERROR","LOGOUT","token","localStorage","getItem","user","initialState","state","action","type","loading"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,YANF,EAOEC,MAPF,QAQO,iBARP;AAUA,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,IAAMC,IAAI,GAAGH,KAAK,IAAIR,SAAS,CAACQ,KAAD,CAAT,CAAiBG,IAAvC;;AAEA,IAAMC,YAAY,qBACZJ,KAAK,IAAI;AAAEA,EAAAA,KAAK,EAALA;AAAF,CADG,EAEZG,IAAI,IAAI;AAAEA,EAAAA,IAAI,EAAJA;AAAF,CAFI,CAAlB;;AAKA,gBAAe,YAAkC;AAAA,MAAjCE,KAAiC,uEAAzBD,YAAyB;AAAA,MAAXE,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,cAAL;AACA,SAAKH,aAAL;AACE,+BAAYY,KAAZ;AAAmBG,QAAAA,OAAO,EAAE;AAA5B;;AACF,SAAKX,cAAL;AACA,SAAKH,aAAL;AACE,UAAMS,KAAI,GAAGX,SAAS,CAACc,MAAM,CAACN,KAAR,CAAT,CAAwBG,IAArC;AACA,+BACKE,KADL;AAEEG,QAAAA,OAAO,EAAE,KAFX;AAGER,QAAAA,KAAK,EAAEM,MAAM,CAACN,KAHhB;AAIEG,QAAAA,IAAI,EAAJA;AAJF;;AAOF,SAAKL,YAAL;AACA,SAAKH,WAAL;AACE,+BAAYU,KAAZ;AAAmBG,QAAAA,OAAO,EAAE;AAA5B;;AAEF,SAAKT,MAAL;AACE,+BAAYM,KAAZ;AAAmBL,QAAAA,KAAK,EAAE,IAA1B;AAAgCG,QAAAA,IAAI,EAAE;AAAtC;;AAEF;AACE,aAAOE,KAAP;AAtBJ;AAwBD,CAzBD","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  SIGNUP_ERROR,\n  LOGOUT\n} from '../actions/auth';\n\nconst token = localStorage.getItem('token');\nconst user = token && jwtDecode(token).user;\n\nconst initialState = {\n  ...(token && { token }),\n  ...(user && { user })\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNUP_REQUEST:\n    case LOGIN_REQUEST:\n      return { ...state, loading: true };\n    case SIGNUP_SUCCESS:\n    case LOGIN_SUCCESS:\n      const user = jwtDecode(action.token).user;\n      return {\n        ...state,\n        loading: false,\n        token: action.token,\n        user\n      };\n\n    case SIGNUP_ERROR:\n    case LOGIN_ERROR:\n      return { ...state, loading: false };\n\n    case LOGOUT:\n      return { ...state, token: null, user: null };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}